class wrapper
  override function getTestSuiteData()
    return {
      name: "Rooibos assertion tests"
      isSolo: false
      isIgnored: false
      filePath: "source/Assertion.spec.bs"
      valid: true
      hasFailures: undefined
      hasSoloTests: undefined
      hasIgnoredTests: false
      hasSoloGroups: undefined
      setupFunctionName: ""
      tearDownFunctionName: ""
      beforeEachFunctionName: ""
      afterEachFunctionName: ""
      isNodeTest: undefined
      nodeName: ""
      testGroups: [
        {
          name: "tests basic assertions"
          isSolo: false
          isIgnored: false
          filename: "source/Assertion.spec.bs"
          setupFunctionName: ""
          tearDownFunctionName: ""
          beforeEachFunctionName: ""
          afterEachFunctionName: ""
          testCases: [
            {
              isSolo: false
              funcName: "test_fail"
              isIgnored: false
              isParamTest: false
              name: "Fail"
              lineNumber: 10
              paramLineNumber: 0
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: []
              paramTestIndex: 0
              expectedNumberOfParams: 0
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertTrue"
              isIgnored: false
              isParamTest: false
              name: "param.text0"
              lineNumber: 28
              paramLineNumber: 22
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [true, true]
              paramTestIndex: 0
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertTrue"
              isIgnored: false
              isParamTest: false
              name: "param.text1"
              lineNumber: 28
              paramLineNumber: 23
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [false, false]
              paramTestIndex: 1
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertTrue"
              isIgnored: false
              isParamTest: false
              name: "param.text2"
              lineNumber: 28
              paramLineNumber: 24
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [invalid, false]
              paramTestIndex: 2
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertTrue"
              isIgnored: false
              isParamTest: false
              name: "param.text3"
              lineNumber: 28
              paramLineNumber: 25
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [0, false]
              paramTestIndex: 3
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertTrue"
              isIgnored: false
              isParamTest: false
              name: "param.text4"
              lineNumber: 28
              paramLineNumber: 26
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [1, false]
              paramTestIndex: 4
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertTrue"
              isIgnored: false
              isParamTest: false
              name: "param.text5"
              lineNumber: 28
              paramLineNumber: 27
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: ["test", false]
              paramTestIndex: 5
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertFalse"
              isIgnored: false
              isParamTest: false
              name: "param.text0"
              lineNumber: 45
              paramLineNumber: 39
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [false, true]
              paramTestIndex: 0
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertFalse"
              isIgnored: false
              isParamTest: false
              name: "param.text1"
              lineNumber: 45
              paramLineNumber: 40
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [true, false]
              paramTestIndex: 1
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertFalse"
              isIgnored: false
              isParamTest: false
              name: "param.text2"
              lineNumber: 45
              paramLineNumber: 41
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [invalid, false]
              paramTestIndex: 2
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertFalse"
              isIgnored: false
              isParamTest: false
              name: "param.text3"
              lineNumber: 45
              paramLineNumber: 42
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [0, false]
              paramTestIndex: 3
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertFalse"
              isIgnored: false
              isParamTest: false
              name: "param.text4"
              lineNumber: 45
              paramLineNumber: 43
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [1, false]
              paramTestIndex: 4
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertFalse"
              isIgnored: false
              isParamTest: false
              name: "param.text5"
              lineNumber: 45
              paramLineNumber: 44
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: ["test", false]
              paramTestIndex: 5
              expectedNumberOfParams: 2
              isParamsValid: true
          }]
        },
        {
          name: "tests AssertArrayContainsAAs"
          isSolo: false
          isIgnored: false
          filename: "source/Assertion.spec.bs"
          setupFunctionName: ""
          tearDownFunctionName: ""
          beforeEachFunctionName: ""
          afterEachFunctionName: ""
          testCases: [
            {
              isSolo: false
              funcName: "test_assertArrayContainsAAs_Fail"
              isIgnored: false
              isParamTest: false
              name: "param.text0"
              lineNumber: 77
              paramLineNumber: 61
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [[{ "one": 1 }], [{ "one": 2 }]]
              paramTestIndex: 0
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertArrayContainsAAs_Fail"
              isIgnored: false
              isParamTest: false
              name: "param.text1"
              lineNumber: 77
              paramLineNumber: 62
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [[{ "one": 1 }], [{ "one": "a" }]]
              paramTestIndex: 1
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertArrayContainsAAs_Fail"
              isIgnored: false
              isParamTest: false
              name: "param.text2"
              lineNumber: 77
              paramLineNumber: 63
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [[{ "one": 1 }], [{}]]
              paramTestIndex: 2
              expectedNumberOfParams: 2
              isParamsValid: true
            },

            {
              isSolo: false
              funcName: "test_assertArrayContainsAAs_Fail"
              isIgnored: false
              isParamTest: false
              name: "param.text3"
              lineNumber: 77
              paramLineNumber: 64
              assertIndex: 0
              assertLineNumberMap: {}
              rawParams: [[{ "one": 1 }], [invalid]]
                paramTestIndex: 3
                expectedNumberOfParams: 2
                isParamsValid: true
              },

              {
                isSolo: false
                funcName: "test_assertArrayContainsAAs_Fail"
                isIgnored: false
                isParamTest: false
                name: "param.text4"
                lineNumber: 77
                paramLineNumber: 65
                assertIndex: 0
                assertLineNumberMap: {}
                rawParams: [[{ "one": 1 }], []]
                  paramTestIndex: 4
                  expectedNumberOfParams: 2
                  isParamsValid: true
                },

                {
                  isSolo: false
                  funcName: "test_assertArrayContainsAAs_Fail"
                  isIgnored: false
                  isParamTest: false
                  name: "param.text5"
                  lineNumber: 77
                  paramLineNumber: 66
                  assertIndex: 0
                  assertLineNumberMap: {}
                  rawParams: [[{ "one": 1 }], invalid]
                  paramTestIndex: 5
                  expectedNumberOfParams: 2
                  isParamsValid: true
                },

                {
                  isSolo: false
                  funcName: "test_assertArrayContainsAAs_Fail"
                  isIgnored: false
                  isParamTest: false
                  name: "param.text6"
                  lineNumber: 77
                  paramLineNumber: 67
                  assertIndex: 0
                  assertLineNumberMap: {}
                  rawParams: [[{ "one": 1 }], [[]]]
                  paramTestIndex: 6
                  expectedNumberOfParams: 2
                  isParamsValid: true
                },

                {
                  isSolo: false
                  funcName: "test_assertArrayContainsAAs_Fail"
                  isIgnored: false
                  isParamTest: false
                  name: "param.text7"
                  lineNumber: 77
                  paramLineNumber: 68
                  assertIndex: 0
                  assertLineNumberMap: {}
                  rawParams: [[{ "one": 1 }], ["wrong"]]
                    paramTestIndex: 7
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text8"
                    lineNumber: 77
                    paramLineNumber: 69
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "one": 1 }], [2]]
                      paramTestIndex: 8
                      expectedNumberOfParams: 2
                      isParamsValid: true
                    },

                    {
                      isSolo: false
                      funcName: "test_assertArrayContainsAAs_Fail"
                      isIgnored: false
                      isParamTest: false
                      name: "param.text9"
                      lineNumber: 77
                      paramLineNumber: 70
                      assertIndex: 0
                      assertLineNumberMap: {}
                      rawParams: [[{ "one": "a" }], [{ "one": 1 }]]
                      paramTestIndex: 9
                      expectedNumberOfParams: 2
                      isParamsValid: true
                    },

                    {
                      isSolo: false
                      funcName: "test_assertArrayContainsAAs_Fail"
                      isIgnored: false
                      isParamTest: false
                      name: "param.text10"
                      lineNumber: 77
                      paramLineNumber: 71
                      assertIndex: 0
                      assertLineNumberMap: {}
                      rawParams: [[{ "two": 1 }], [{ "one": 1 }]]
                      paramTestIndex: 10
                      expectedNumberOfParams: 2
                      isParamsValid: true
                    },

                    {
                      isSolo: false
                      funcName: "test_assertArrayContainsAAs_Fail"
                      isIgnored: false
                      isParamTest: false
                      name: "param.text11"
                      lineNumber: 77
                      paramLineNumber: 72
                      assertIndex: 0
                      assertLineNumberMap: {}
                      rawParams: [[invalid], [{ "one": 1 }]]
                    paramTestIndex: 11
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text12"
                    lineNumber: 77
                    paramLineNumber: 73
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [invalid, [{ "one": 1 }]]
                    paramTestIndex: 12
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text13"
                    lineNumber: 77
                    paramLineNumber: 74
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "one": 1, "two": 2 }], [{ "one": "1" }]]
                    paramTestIndex: 13
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text14"
                    lineNumber: 77
                    paramLineNumber: 75
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "one": 1 }, { "two": 2 }], [{ "one": "1" }, { "two": "a" }]]
                    paramTestIndex: 14
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text15"
                    lineNumber: 77
                    paramLineNumber: 76
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "one": 1 }, { "two": 2 }], [{ "a": 1 }, { "a": 1 }, { "a": 1 }]]
                    paramTestIndex: 15
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text0"
                    lineNumber: 97
                    paramLineNumber: 90
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[], []]
                    paramTestIndex: 0
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text1"
                    lineNumber: 97
                    paramLineNumber: 91
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{}], [{}]]
                    paramTestIndex: 1
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text2"
                    lineNumber: 97
                    paramLineNumber: 92
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "one": 1 }], [{ "one": 1 }]]
                    paramTestIndex: 2
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text3"
                    lineNumber: 97
                    paramLineNumber: 93
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "one": 1, "two": 2 }], [{ "one": 1, "two": 2 }]]
                    paramTestIndex: 3
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text4"
                    lineNumber: 97
                    paramLineNumber: 94
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "one": 1, "two": 2 }], [{ "two": 2, "one": 1 }]]
                    paramTestIndex: 4
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text5"
                    lineNumber: 97
                    paramLineNumber: 95
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "one": 1, "two": 2 }, { "one": 1 }], [{ "one": 1 }, { "two": 2, "one": 1 }]]
                    paramTestIndex: 5
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsAAs_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text6"
                    lineNumber: 97
                    paramLineNumber: 96
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "one": 1, "two": 2 }, { "one": 1 }, { "three": 3 }], [{ "one": 1 }, { "three": 3 }, { "two": 2, "one": 1 }]]
                    paramTestIndex: 6
                    expectedNumberOfParams: 2
                    isParamsValid: true
                }]
              },
              {
                name: "tests global is present on testSuite"
                isSolo: false
                isIgnored: false
                filename: "source/Assertion.spec.bs"
                setupFunctionName: ""
                tearDownFunctionName: ""
                beforeEachFunctionName: ""
                afterEachFunctionName: ""
                testCases: [
                  {
                    isSolo: false
                    funcName: "test_assertGlobalIsPassedIntoTest"
                    isIgnored: false
                    isParamTest: false
                    name: "global is in test"
                    lineNumber: 123
                    paramLineNumber: 0
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: []
                    paramTestIndex: 0
                    expectedNumberOfParams: 0
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertGlobalIsPassedInto_beforeEach_and_afterEach"
                    isIgnored: false
                    isParamTest: false
                    name: "global is in before each and after each"
                    lineNumber: 128
                    paramLineNumber: 0
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: []
                    paramTestIndex: 0
                    expectedNumberOfParams: 0
                    isParamsValid: true
                }]
              },
              {
                name: "tests AssertArrayContainsOnlyValuesOfType"
                isSolo: false
                isIgnored: false
                filename: "source/Assertion.spec.bs"
                setupFunctionName: ""
                tearDownFunctionName: ""
                beforeEachFunctionName: ""
                afterEachFunctionName: ""
                testCases: [
                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text0"
                    lineNumber: 144
                    paramLineNumber: 139
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [["one", "two", "three"], "String"]
                    paramTestIndex: 0
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text1"
                    lineNumber: 144
                    paramLineNumber: 140
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[1, 2, 3], "Integer"]
                    paramTestIndex: 1
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text2"
                    lineNumber: 144
                    paramLineNumber: 141
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[true, true, false], "Boolean"]
                    paramTestIndex: 2
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text3"
                    lineNumber: 144
                    paramLineNumber: 142
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[[true, true], [false, false]], "Array"]
                    paramTestIndex: 3
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text4"
                    lineNumber: 144
                    paramLineNumber: 143
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "test": 1 }, { "test": 1 }], "AssociativeArray"]
                    paramTestIndex: 4
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text0"
                    lineNumber: 167
                    paramLineNumber: 156
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [["one", 2, "three"], "String"]
                    paramTestIndex: 0
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text1"
                    lineNumber: 167
                    paramLineNumber: 157
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[1, "two", 3], "Integer"]
                    paramTestIndex: 1
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text2"
                    lineNumber: 167
                    paramLineNumber: 158
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[true, "true", false], "Boolean"]
                    paramTestIndex: 2
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text3"
                    lineNumber: 167
                    paramLineNumber: 159
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[[true, true], false, false], "Array"]
                    paramTestIndex: 3
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text4"
                    lineNumber: 167
                    paramLineNumber: 160
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "test": 1 }, "notAA"], "AssociativeArray"]
                    paramTestIndex: 4
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text5"
                    lineNumber: 167
                    paramLineNumber: 161
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [["one", "two", "three"], "UnknownType"]
                    paramTestIndex: 5
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text6"
                    lineNumber: 167
                    paramLineNumber: 162
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [["one", "two", "three"], "Integer"]
                    paramTestIndex: 6
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text7"
                    lineNumber: 167
                    paramLineNumber: 163
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[1, 2, 3], "String"]
                    paramTestIndex: 7
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text8"
                    lineNumber: 167
                    paramLineNumber: 164
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[true, true, false], "String"]
                    paramTestIndex: 8
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text9"
                    lineNumber: 167
                    paramLineNumber: 165
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[[true, true], [false, false]], "AssociativeArray"]
                    paramTestIndex: 9
                    expectedNumberOfParams: 2
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertArrayContainsOnlyValuesOfType_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text10"
                    lineNumber: 167
                    paramLineNumber: 166
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "test": 1 }, { "test": 1 }], "Array"]
                    paramTestIndex: 10
                    expectedNumberOfParams: 2
                    isParamsValid: true
                }]
              },
              {
                name: "tests white spaces work with annotations"
                isSolo: false
                isIgnored: false
                filename: "source/Assertion.spec.bs"
                setupFunctionName: ""
                tearDownFunctionName: ""
                beforeEachFunctionName: ""
                afterEachFunctionName: ""
                testCases: [
                  {
                    isSolo: false
                    funcName: "test_whiteSpacing"
                    isIgnored: false
                    isParamTest: false
                    name: "comments between tests"
                    lineNumber: 190
                    paramLineNumber: 0
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: []
                    paramTestIndex: 0
                    expectedNumberOfParams: 0
                    isParamsValid: true
                }]
              },
              {
                name: "tests AssertNotEmpty"
                isSolo: false
                isIgnored: false
                filename: "source/Assertion.spec.bs"
                setupFunctionName: ""
                tearDownFunctionName: ""
                beforeEachFunctionName: ""
                afterEachFunctionName: ""
                testCases: [
                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text0"
                    lineNumber: 221
                    paramLineNumber: 214
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [["one", "two", "three"]]
                    paramTestIndex: 0
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text1"
                    lineNumber: 221
                    paramLineNumber: 215
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[1, 2, 3]]
                    paramTestIndex: 1
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text2"
                    lineNumber: 221
                    paramLineNumber: 216
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[true]]
                    paramTestIndex: 2
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text3"
                    lineNumber: 221
                    paramLineNumber: 217
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[[true, true], [false, false]]]
                    paramTestIndex: 3
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text4"
                    lineNumber: 221
                    paramLineNumber: 218
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "test": 1 }]]
                    paramTestIndex: 4
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text5"
                    lineNumber: 221
                    paramLineNumber: 219
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: ["not empty"]
                    paramTestIndex: 5
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text6"
                    lineNumber: 221
                    paramLineNumber: 220
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[invalid]]
                    paramTestIndex: 6
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text0"
                    lineNumber: 238
                    paramLineNumber: 233
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [invalid]
                    paramTestIndex: 0
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text1"
                    lineNumber: 238
                    paramLineNumber: 234
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[]]
                    paramTestIndex: 1
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text2"
                    lineNumber: 238
                    paramLineNumber: 235
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [{}]
                    paramTestIndex: 2
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text3"
                    lineNumber: 238
                    paramLineNumber: 236
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [1]
                    paramTestIndex: 3
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertNotEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text4"
                    lineNumber: 238
                    paramLineNumber: 237
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [""]
                    paramTestIndex: 4
                    expectedNumberOfParams: 1
                    isParamsValid: true
                }]
              },
              {
                name: "tests AssertEmpty"
                isSolo: false
                isIgnored: false
                filename: "source/Assertion.spec.bs"
                setupFunctionName: ""
                tearDownFunctionName: ""
                beforeEachFunctionName: ""
                afterEachFunctionName: ""
                testCases: [
                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text0"
                    lineNumber: 257
                    paramLineNumber: 254
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[]]
                    paramTestIndex: 0
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text1"
                    lineNumber: 257
                    paramLineNumber: 255
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [{}]
                    paramTestIndex: 1
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Pass"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text2"
                    lineNumber: 257
                    paramLineNumber: 256
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [""]
                    paramTestIndex: 2
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text0"
                    lineNumber: 278
                    paramLineNumber: 269
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [1]
                    paramTestIndex: 0
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text1"
                    lineNumber: 278
                    paramLineNumber: 270
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [invalid]
                    paramTestIndex: 1
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text2"
                    lineNumber: 278
                    paramLineNumber: 271
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [["one", "two", "three"]]
                    paramTestIndex: 2
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text3"
                    lineNumber: 278
                    paramLineNumber: 272
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[1, 2, 3]]
                    paramTestIndex: 3
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text4"
                    lineNumber: 278
                    paramLineNumber: 273
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[true]]
                    paramTestIndex: 4
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text5"
                    lineNumber: 278
                    paramLineNumber: 274
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[[true, true], [false, false]]]
                    paramTestIndex: 5
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text6"
                    lineNumber: 278
                    paramLineNumber: 275
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[{ "test": 1 }]]
                    paramTestIndex: 6
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text7"
                    lineNumber: 278
                    paramLineNumber: 276
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: ["not empty"]
                    paramTestIndex: 7
                    expectedNumberOfParams: 1
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_assertEmpty_Fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text8"
                    lineNumber: 278
                    paramLineNumber: 277
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: [[invalid]]
                    paramTestIndex: 8
                    expectedNumberOfParams: 1
                    isParamsValid: true
                }]
              },
              {
                name: "tests expect"
                isSolo: false
                isIgnored: false
                filename: "source/Assertion.spec.bs"
                setupFunctionName: ""
                tearDownFunctionName: ""
                beforeEachFunctionName: ""
                afterEachFunctionName: ""
                testCases: [
                  {
                    isSolo: false
                    funcName: "test_expect_multiValues"
                    isIgnored: false
                    isParamTest: false
                    name: "multi return values"
                    lineNumber: 294
                    paramLineNumber: 0
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: []
                    paramTestIndex: 0
                    expectedNumberOfParams: 0
                    isParamsValid: true
                }]
              },
              {
                name: "tests expect with overloaded expectOnce"
                isSolo: false
                isIgnored: false
                filename: "source/Assertion.spec.bs"
                setupFunctionName: ""
                tearDownFunctionName: ""
                beforeEachFunctionName: ""
                afterEachFunctionName: ""
                testCases: [
                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_success"
                    isIgnored: false
                    isParamTest: false
                    name: "simple test"
                    lineNumber: 326
                    paramLineNumber: 0
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: []
                    paramTestIndex: 0
                    expectedNumberOfParams: 0
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_success_oneCallsArgsNotTracked"
                    isIgnored: false
                    isParamTest: false
                    name: "can set up multi expects on same method - one invocation with any args"
                    lineNumber: 357
                    paramLineNumber: 0
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: []
                    paramTestIndex: 0
                    expectedNumberOfParams: 0
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_multi_args_success"
                    isIgnored: false
                    isParamTest: false
                    name: "can set up multi expects on same method - multi params"
                    lineNumber: 388
                    paramLineNumber: 0
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: []
                    paramTestIndex: 0
                    expectedNumberOfParams: 0
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_multi_args_others_success"
                    isIgnored: false
                    isParamTest: false
                    name: "multi test, multi params with other expects"
                    lineNumber: 419
                    paramLineNumber: 0
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: []
                    paramTestIndex: 0
                    expectedNumberOfParams: 0
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_multi_args_others_fail"
                    isIgnored: false
                    isParamTest: false
                    name: "multi test, multi params with other expects - fail others"
                    lineNumber: 458
                    paramLineNumber: 0
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: []
                    paramTestIndex: 0
                    expectedNumberOfParams: 0
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text0"
                    lineNumber: 503
                    paramLineNumber: 497
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: ["arg1_", "arg2", "arg3"]
                    paramTestIndex: 0
                    expectedNumberOfParams: 3
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text1"
                    lineNumber: 503
                    paramLineNumber: 498
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: ["arg1", "arg2", "arg3_"]
                    paramTestIndex: 1
                    expectedNumberOfParams: 3
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text2"
                    lineNumber: 503
                    paramLineNumber: 499
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: ["arg1", "arg2_", "arg3"]
                    paramTestIndex: 2
                    expectedNumberOfParams: 3
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text3"
                    lineNumber: 503
                    paramLineNumber: 500
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: ["arg1", "arg2_", "arg3"]
                    paramTestIndex: 3
                    expectedNumberOfParams: 3
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text4"
                    lineNumber: 503
                    paramLineNumber: 501
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: ["arg1_", "arg2_", "arg3"]
                    paramTestIndex: 4
                    expectedNumberOfParams: 3
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_fail"
                    isIgnored: false
                    isParamTest: false
                    name: "param.text5"
                    lineNumber: 503
                    paramLineNumber: 502
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: ["arg1_", invalid, "arg3"]
                    paramTestIndex: 5
                    expectedNumberOfParams: 3
                    isParamsValid: true
                }]
              },
              {
                name: "tests overloaded expectOnce on different objects"
                isSolo: false
                isIgnored: false
                filename: "source/Assertion.spec.bs"
                setupFunctionName: ""
                tearDownFunctionName: ""
                beforeEachFunctionName: ""
                afterEachFunctionName: ""
                testCases: [
                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_differentOnj_success"
                    isIgnored: false
                    isParamTest: false
                    name: "success"
                    lineNumber: 537
                    paramLineNumber: 0
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: []
                    paramTestIndex: 0
                    expectedNumberOfParams: 0
                    isParamsValid: true
                  },

                  {
                    isSolo: false
                    funcName: "test_expect_multiExpect_differentOnj_fail"
                    isIgnored: false
                    isParamTest: false
                    name: "fail to match"
                    lineNumber: 569
                    paramLineNumber: 0
                    assertIndex: 0
                    assertLineNumberMap: {}
                    rawParams: []
                    paramTestIndex: 0
                    expectedNumberOfParams: 0
                    isParamsValid: true
                }]
            }]
          }
        end function
      end class
      