import "pkg:/source/BaseTestSuite.bs"
import "pkg:/source/CommonUtils.bs"

class ItGroup
  function new(groupData)
    for each field in groupData
      m[field] = groupData[field]
    end for
  end function

  function getTestCases() as object
    if (m.hasSoloTests = true)
      return m.soloTestCases
    else
      return m.testCases
    end if
  end function

  function getRunnableTestSuite() as object
    testCases = Rooibos.ItGroup.getTestCases(group)

    runnableSuite = new BaseTestSuite()
    runnableSuite.name = group.name
    runnableSuite.isLegacy = group.isLegacy = true
    if group.testCaseLookup = invalid
      group.testCaseLookup = {}
    end if

    for each testCase in testCases
      name = testCase.name
      if (testCase.isSolo = true)
        name = name + " [SOLO] "
      end if
      testFunction = Common.getFunction(m.filename, testCase.funcName)
      runnableSuite.addTest(name, testFunction, testCase.funcName)
      m.testCaseLookup[name] = testCase
    end for

    runnableSuite.SetUp = Common.getFunction(m.filename, m.setupFunctionName)
    runnableSuite.TearDown = Common.getFunction(m.filename, m.teardownFunctionName)
    runnableSuite.BeforeEach = Common.getFunction(m.filename, m.beforeEachFunctionName)
    runnableSuite.AfterEach = Common.getFunction(m.filename, m.afterEachFunctionName)

    return runnableSuite
  end function

end class